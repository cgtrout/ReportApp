<?xml version="1.0" encoding="utf-8"?>
<Window
     x:Class="ReportApp.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     Title="ReportApp"
     Height="684"
     Width="817" 
     xmlns:local="clr-namespace:ReportApp.Model"
     xmlns:l="clr-namespace:ReportApp" 
     xmlns:avalonDock="http://schemas.xceed.com/wpf/xaml/avalondock"
     xmlns:dockctrl="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
     xmlns:vw="clr-namespace:ReportApp.View"
     xmlns:vm="clr-namespace:ReportApp.ViewModel"
     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
     xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
     PreviewKeyUp="Window_KeyUp"
     Opacity="1" AllowsTransparency="False">
    <Window.CommandBindings>

    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding OpenViewModelCommand}" CommandParameter="AddPerson"/>
        <KeyBinding Key="F2" Command="{Binding OpenViewModelCommand}" CommandParameter="Search"/>
        <KeyBinding Key="F3" Command="{Binding OpenViewModelCommand}" CommandParameter="OrientationsLiveView"/>
        <KeyBinding Key="F8" Command="{Binding OpenViewModelCommand}" CommandParameter="ShiftEntries"/>
        <KeyBinding Key="F9" Command="{Binding OpenViewModelCommand}" CommandParameter="Stats"/>

        <KeyBinding Key="OemTilde" Modifiers="Ctrl" Command="{Binding OpenConsoleCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <ResourceDictionary
			Source="MainWindowResources.xaml" />

    </Window.Resources>
    <xctk:BusyIndicator IsBusy="{Binding IsBusy}">
        <DockPanel>
            <DockPanel
			DockPanel.Dock="Top"
			KeyboardNavigation.TabNavigation="None">
                <Menu KeyboardNavigation.TabNavigation="Cycle">
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <DockPanel HorizontalAlignment="Stretch"/>
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>
                    <Menu.Resources>
                        <Style TargetType="{x:Type Menu}">
                            <Setter Property="Background" Value="#f0f3fb"/>
                            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
                            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
                            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
                            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Menu}">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Menu.Resources>
                    <MenuItem Header="_Contents" Margin="0,0">
                        <vm:ContentsViewModel/>
                        <MenuItem.Resources>
                            <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
                                <StackPanel Margin="0,0,-60,0" Background="White"/>
                            </ItemsPanelTemplate>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="ItemsPanel" Value="{StaticResource MenuItemPanelTemplate}"/>
                            </Style>
                        </MenuItem.Resources>
                    </MenuItem>
                    <!--<MenuItem Header="_File">
                         <MenuItem Header="E_xit" Command="{Binding Path=CloseCommand}" />
                    </MenuItem>-->
                    <MenuItem Header="_Phone">
                        <MenuItem Header="_Import Data" Command="{Binding PhoneImportCommand}"/>
                        <MenuItem Header="View Data" Command="{Binding OpenViewModelCommand}" CommandParameter="PhoneViewModel"/>
                    </MenuItem>
                    <MenuItem Header="_Report">
                        <MenuItem Header="Print _RollCall" Command="{Binding Path=PrintRollCallCommand}">
                            <MenuItem.Icon>
                                <Image Source="c:\CTApp\Settings\Icons\Print.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Save RollCall Zip" Command="{Binding SaveRollCallsCommand}">
                            <MenuItem.Icon>
                                <Image Source="c:\CTApp\Settings\Icons\save_16xLG.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="_Export All Shift-Entry Presets" Command="{Binding ExportAllShiftEntryPresets}">
                            <MenuItem.Icon>
                                <Image Source="c:\CTApp\Settings\Icons\save_16xLG.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="_Stats">
                        <!--<MenuItem Header="_Print Month-End Reports" Command="{Binding Path=PrintAllStatsCommand}"/>-->
                        <MenuItem Header="_Export Month End Zip File" Command="{Binding Path=OpenViewModelCommand}" CommandParameter="SaveStats">
                            <MenuItem.Icon>
                                <Image Source="c:\CTApp\Settings\Icons\save_16xLG.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="_View Daily Stats Sheet" Command="{Binding Path=OpenViewModelCommand}" CommandParameter="Stats" InputGestureText="F9">
                            <MenuItem.Icon>
                                <Image Source="c:\CTApp\Settings\Icons\IntelliTrace_16x.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="_Window">
                        <MenuItem Header="_Close All Tabs" Command="{Binding Path=CloseTabsCommand}" InputGestureText="Alt+W,C">
                            <MenuItem.Icon>
                                <Image Source="c:\CTApp\Settings\Icons\Close_6519.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Show Table of Contents" Command="{Binding Path=ShowTocCommand}"/>
                        <Separator/>
                        <MenuItem Header="Show/Hide _Roll Call Live View" Click="ToggleRollCall" InputGestureText="F5"/>
                        <MenuItem Header="Show/Hide _Vehicle Entries" Click="ToggleVehicle" InputGestureText="F6"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="_Help" HorizontalAlignment="Right">
                        <MenuItem Header="_Answer Keys" Command="{Binding Path=ShowAnswerKeyCommand}"/>
                        <Separator/>
                        <MenuItem Header="Help: Major Components"   Command="{Binding Path=ShowHelpImageCommand}" CommandParameter="Major Components"/>
                        <MenuItem Header="Help: Add Person Form"    Command="{Binding Path=ShowHelpImageCommand}" CommandParameter="Add Person Form"/>
                        <MenuItem Header="Help: Roll Call"          Command="{Binding Path=ShowHelpImageCommand}" CommandParameter="Roll Call"/>
                        <MenuItem Header="Help: Vehicle Entries"    Command="{Binding Path=ShowHelpImageCommand}" CommandParameter="Vehicle Entries"/>
                    </MenuItem>
                </Menu>
            </DockPanel>
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem DockPanel.Dock="Right">
                    <TextBox FontFamily="Consolas" Margin="1, 0" Name="TextBoxTime" IsEnabled="False" VerticalAlignment="Center" 
                             FontSize="14" FontWeight="Bold" TextDecorations="{x:Null}"/>
                </StatusBarItem>
                <StatusBarItem DockPanel.Dock="Right">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding OpenViewModelCommand}" CommandParameter="TaskQueue"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel ToolTip="'A' : loading access log from API &#x0a;'P' : updating person data from API &#x0a;'D': saving to database" 
				            
                                ToolTipService.ShowDuration="20000"
                                DockPanel.Dock="Right"
				            Orientation="Horizontal">
                        <TextBox
						FontFamily="Consolas"
						HorizontalAlignment="Right"
						IsEnabled="False"
						VerticalAlignment="Center"
						Name="DatabaseIsUpdatingText"
						Text="      "
						Width="90"
						Margin="1, 0" FontSize="12" TextDecorations="{x:Null}">


                        </TextBox>
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem ToolTip="How long ReportApp has been running (in days)" 
                              DockPanel.Dock="Right" 
                              ToolTipService.ShowDuration="20000">
                    <TextBox Name="TextboxRuntime" FontFamily="Consolas" IsEnabled="False" Text="{Binding RunTime, Mode=OneWay}" FontSize="12" TextDecorations="{x:Null}"/>
                </StatusBarItem>
                <StatusBarItem ToolTip="{Binding DriftTimeToolTip}" 
                              DockPanel.Dock="Right" 
                              ToolTipService.ShowDuration="20000">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ResetDriftTimeCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TextBox FontFamily="Consolas" IsEnabled="False" Text="{Binding DriftTime, Mode=OneWay}" FontSize="12" TextDecorations="{x:Null}"/>
                </StatusBarItem>
                <StatusBarItem HorizontalContentAlignment="Stretch">
                    <TextBox
					FontFamily="Consolas"
					IsEnabled="False"
					Text="{Binding StatusText, Mode=OneWay}" FontSize="12" TextDecorations="{x:Null}" FontWeight="Bold" TextBlock.Foreground="{Binding StatusTextColor}"/>
                </StatusBarItem>
            </StatusBar>
            <Grid
			Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
					Width="0" />
                    <ColumnDefinition
					Width="0" />
                    <ColumnDefinition
					Width="788*" />
                    <ColumnDefinition Width="21*"/>
                </Grid.ColumnDefinitions>

                <avalonDock:DockingManager Grid.Column="2"
                                          DocumentsSource="{Binding Workspaces}"
                                          AnchorablesSource="{Binding Anchorables}"
                                          ActiveContent="{Binding ActiveWorkspace, Mode=TwoWay}"
                                          x:Name="dockingManager"
                                          Margin="0"       
                                          
                                          IsMouseCapturedChanged="dockingManager_IsMouseCapturedChanged"
                                          IsMouseCaptureWithinChanged="dockingManager_IsMouseCaptureWithinChanged"
                                          LostMouseCapture="dockingManager_LostMouseCapture"
                                          ManipulationStarted="dockingManager_ManipulationStarted"
                                          QueryContinueDrag="dockingManager_QueryContinueDrag"
                                          DragLeave="dockingManager_DragLeave"
                                          DragDrop.DragLeave="dockingManager_DragLeave_1"
                                          DragEnter="dockingManager_DragEnter"
                                          
                                          FocusableChanged="dockingManager_FocusableChanged"
                                          FocusManager.LostFocus="dockingManager_LostFocus"
                                          
                                          GotMouseCapture="dockingManager_GotMouseCapture"
                                          LayoutChanged="dockingManager_LayoutChanged"
                                          LayoutChanging="dockingManager_LayoutChanging"
                                          
                                          LayoutUpdated="dockingManager_LayoutUpdated"
                                          
                                          MouseLeftButtonUp="dockingManager_MouseLeftButtonUp"
                                          ActiveContentChanged="dockingManager_ActiveContentChanged"
                                          DocumentClosed="dockingManager_DocumentClosed"
                                          DocumentClosing="dockingManager_DocumentClosing"
                                          LostFocus="dockingManager_LostFocus_1" Grid.ColumnSpan="2"
                                       >
                    <avalonDock:DockingManager.Theme>
                        <avalonDock:AeroTheme/>
                    </avalonDock:DockingManager.Theme>
                    <avalonDock:DockingManager.LayoutItemContainerStyle>
                        <Style TargetType="{x:Type dockctrl:LayoutItem}">
                            <Setter Property="Title" Value="{Binding Model.DisplayName}"/>
                            <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}"/>
                            <Setter Property="Visibility" Value="{Binding Model.IsVisible, Mode=TwoWay, Converter={StaticResource BoolToVis}}"/>
                        </Style>
                    </avalonDock:DockingManager.LayoutItemContainerStyle>
                    <avalonDock:LayoutRoot>
                        <avalonDock:LayoutPanel  Orientation="Horizontal" >
                            <avalonDock:LayoutAnchorablePaneGroup Orientation="Horizontal" DockWidth="267">
                                <avalonDock:LayoutAnchorablePane>
                                    <avalonDock:LayoutAnchorable x:Name="rollCallAnchorable" CanFloat="False" CanHide="False" ContentId="rollcall">
                                        <vm:RollCallViewModel/>
                                    </avalonDock:LayoutAnchorable>
                                    <avalonDock:LayoutAnchorable Title="Contents" AutoHideWidth="170" CanClose="False">
                                        <vm:ContentsViewModel>
                                        </vm:ContentsViewModel>
                                    </avalonDock:LayoutAnchorable>
                                </avalonDock:LayoutAnchorablePane>
                            </avalonDock:LayoutAnchorablePaneGroup>
                            <avalonDock:LayoutPanel Orientation="Vertical">
                                <avalonDock:LayoutPanel Orientation="Horizontal">
                                    <avalonDock:LayoutDocumentPaneGroup Orientation="Horizontal">
                                        <avalonDock:LayoutDocumentPane>
                                            <avalonDock:LayoutDocument x:Name="accessEntries" ContentId="accessentries" CanClose="False">
                                                <vm:AccessEntriesViewModel/>
                                            </avalonDock:LayoutDocument>
                                        </avalonDock:LayoutDocumentPane>
                                    </avalonDock:LayoutDocumentPaneGroup>
                                </avalonDock:LayoutPanel>
                                <avalonDock:LayoutAnchorablePaneGroup Orientation="Horizontal" DockWidth="186" DockHeight="294.3" FloatingWidth="186" FloatingHeight="595" FloatingLeft="710" FloatingTop="725">
                                    <avalonDock:LayoutAnchorablePane DockHeight="294.3" FloatingWidth="186" FloatingHeight="595" FloatingLeft="710" FloatingTop="725">
                                        <avalonDock:LayoutAnchorable x:Name="vehicleAnchorable" CanFloat="False"  CanHide="False" AutoHideMinWidth="100" AutoHideMinHeight="100" Title="Vehicle Entries" IsSelected="True" FloatingLeft="710" FloatingTop="725" FloatingWidth="186" FloatingHeight="595" LastActivationTimeStamp="01/23/2016 22:50:10" ContentId="vehicleentries">
                                            <vm:VehicleEntriesViewModel x:Name="VehicleEntriesVmInstance"/>
                                        </avalonDock:LayoutAnchorable>
                                    </avalonDock:LayoutAnchorablePane>
                                </avalonDock:LayoutAnchorablePaneGroup>
                            </avalonDock:LayoutPanel>
                        </avalonDock:LayoutPanel>
                    </avalonDock:LayoutRoot>
                </avalonDock:DockingManager>
            </Grid>
        </DockPanel>
    </xctk:BusyIndicator>
</Window>